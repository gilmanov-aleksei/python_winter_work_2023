#! /usr/bin/python

# # Модуль randint из функции random для генерации чисел
# from random import randint
#
# # Генерация списка, состоящий из списка чисел
# # Пустой список, основной список
# lst1 = []
# # Пустой список, внутренний список
# # Колличество внутренних списков
# for i in range(randint(3, 6)):
#     # Очистка внутреннего списка
#     lst2 = []
#     # Колличество цифр во внутренних списках
#     for j in range(randint(1, 5)):
#         # Добовляем сгенерированные число во внутренний список
#         lst2.append(randint(5, 50))
# # Добовляем внутренний список в основой
#     lst1.append(lst2)
#
# Список состоящий из списков чисел
lst1 = [[1, 5, 3], [333, 555, 777], [1], [2, 44, 1, 4], [221122, 112211], [3, 3], [111111]]
# Выводим на экран входной список
print(lst1)
# Пустые списки
lst2 = []
lst3 = []
# Цикл основного списка по элементам списка
for i in lst1:
    # Преобразуем каждый список в строку чисел,
    # получаем длину каждой строки
    l_num = len("".join(map(str, i)))
    # Записываем длину каждой строки во-второй список,
    # по порядку их получения
    lst2.append(l_num)

# Цикл по второму списку
for j in range(len(lst2)):
    # Поиск наименьшего числа в списке
    # и получение его индекса
    index = lst2.index(min(lst2))
    # Поиск наименьшего числа в списке
    # и получение его индекса и значения
    # index, value = min(enumerate(lst2), key=lambda x: x[1])
    # Уалением значение из второго списка
    lst2.pop(index)
    # Получаем значение из первого списка,
    # по индексу из второего списка,
    # с добавлением в третий списк,
    # с последющим удалением из первого списка.
    lst3.append(lst1.pop(index))
# Цикл по оснавному списку
for k in lst3:
    # В пустой список записываем
    # отсартированные внутренние списки
    # по убыванию
    lst2.append(sorted(k, reverse=True))
# Сортируем основной список по возрастанию
# колличества элементов во внутренних списках
# Выводим на экран отсартированный список
print(lst2)
